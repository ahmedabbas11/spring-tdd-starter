# Java Gradle CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-java/
version: 2.1

commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "Hello World"
    steps:
      - run: echo << parameters.to >>

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: ./gradlew test
  
  save_hello_world_output:
    docker: # executor type
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "save text to file"
          command: |
            echo "abbas abbas abbas" > output.txt
      - print_pipeline_id:
          to: $CIRCLE_WORKFLOW_ID
      - persist_to_workspace:
          root: .
          paths:
            - ./output.txt
            
  print_output_file:
    docker: # executor type
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: .
      - run: cat output.txt
  
  created_to_fail:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: return 1
      - run:
          name: handle failure
          command: echo "SOS system failed!!!!"
          when: on_fail
      

workflows:
  version: 2
  workflow:
    jobs:
    - build
    - save_hello_world_output
    - print_output_file:
        requires:
            - save_hello_world_output
    - created_to_fail
